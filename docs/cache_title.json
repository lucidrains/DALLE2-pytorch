{"_default": {"1": {"path": "/MANIFEST.in", "hash": "f9ff9c1e4ee01b32d61e287c1e7e533f", "title": "Including Dalle2 PyTorch .txt Files"}, "2": {"path": "/Makefile", "hash": "350e5c872edd876a22f767f2ba6708bf", "title": "CUDA Test Installation"}, "3": {"path": "/README.md", "hash": "1c90dab549d0d00bc34b265fbdd1b75d", "title": "Enhancing DALL-E 2 with Layers and Inpainting"}, "4": {"path": "/README.md:1-13", "hash": "b691576a3bf017e8fb595333f9d451b6", "title": "DALL-E 2 PyTorch Implementation: SOTA Text-to-Image Synthesis"}, "5": {"path": "/README.md:13-25", "hash": "9518bb1e7678ef5c9ef2bf2c544906b5", "title": "Simplified DALL-E 2 Model with Imagen Decoder"}, "6": {"path": "/README.md:27-36", "hash": "ffde93d33ceae53cedf5b12ce4a13cd6", "title": "Diffusion Models on Steroids"}, "7": {"path": "/README.md:38-48", "hash": "eb1205cb10ad3bdcc2d37aa251e5334d", "title": "Acknowledging Contributors"}, "8": {"path": "/README.md:49-70", "hash": "8daf8c8e7585b6455701b3b6a2772011", "title": "Installation and Usage Guide"}, "9": {"path": "/README.md:71-91", "hash": "5673d69c5353b278a58b02d655f3f7b5", "title": "CLIP Model Setup and Configurations"}, "10": {"path": "/README.md:92-136", "hash": "b8416b78dd561b75c77521cb35ad5997", "title": "Training CLIP Decoder Using Unet"}, "11": {"path": "/README.md:138-181", "hash": "c764dfde4d067c2620ce374e75e42e98", "title": "U-Net Model Creation and Decoder for Image Generation"}, "12": {"path": "/README.md:182-223", "hash": "92157e27420674fb058302a0a9964888", "title": "Diffusion Prior Network for Image-Text Generation"}, "13": {"path": "/README.md:223-269", "hash": "125f4ecb2231b90f3b3800818699f4b9", "title": "CLIP Model with Cascaded UNETs Initialization"}, "14": {"path": "/README.md:269-298", "hash": "50aa341e5c70b41f2c0fd723d4989f36", "title": "U-Net Decoder with Diffusion Prior for DALL-E2"}, "15": {"path": "/README.md:299-353", "hash": "014c5d31c348dfdb8d50913ff2b06ea4", "title": "DALLE2 Image Generation and Training Code"}, "16": {"path": "/README.md:354-400", "hash": "6e60af968532e23945b305bb1042344f", "title": "Training DALLE-like Image Gen Model with PyTorch Unets"}, "17": {"path": "/README.md:401-431", "hash": "2a4daec6e9e4510f3429e970e688a2d8", "title": "DALLE2 Model Training and Image Generation"}, "18": {"path": "/README.md:432-474", "hash": "16ccb33fa1bcf63a72dcec66c0404349", "title": "Diffusion Prior Setup for CLIP Model"}, "19": {"path": "/README.md:475-510", "hash": "f02017ae866affe5335eb2853e4ecc64", "title": "Diffusion Prior with AR Transformer and CLIP Embeddings"}, "20": {"path": "/README.md:511-544", "hash": "7a182305d123d54a9e4be68165d7433b", "title": "Diffusion Model Training with OpenAI CLIP"}, "21": {"path": "/README.md:544-589", "hash": "3f90cb6c60f211e23b920088fbfe8005", "title": "Integrating CLIP with DALLE2 for Training"}, "22": {"path": "/README.md:590-625", "hash": "43f24d7962528190041a18701d051c69", "title": "Training and Generating with DALLE2"}, "23": {"path": "/README.md:626-663", "hash": "a3fb268f36ec23469bdc5222da38025a", "title": "Open Clip Image Processing with Code Examples"}, "24": {"path": "/README.md:664-700", "hash": "d8b7668ec8a34605b1f2907e67d8ab7b", "title": "Initialize DALL-E 2 Model Components"}, "25": {"path": "/README.md:702-731", "hash": "507585f7f12a477fdf6f3e2ad15d37fc", "title": "DALL-E2 Inpainting with Latent Diffusion"}, "26": {"path": "/README.md:731-762", "hash": "1bf088ead979c38a54650ffec564527e", "title": "Enhancing Autoencoder with VQGAN-VAE"}, "27": {"path": "/README.md:763-807", "hash": "d821f77f6003636b45ff7dc38fba61f2", "title": "Setting Up DALLE2 Components: VQGanVAE, Unets, and Decoder"}, "28": {"path": "/README.md:808-846", "hash": "6516334798b79e9eccf7936666cc2461", "title": "Training Multi-UNET Decoder with Cascading DDPM"}, "29": {"path": "/README.md:846-888", "hash": "9cc2c4b180c556abda276f9fe6c163ca", "title": "Text-to-Image Generation with CLIP and Unet"}, "30": {"path": "/README.md:889-926", "hash": "783ec3061bf741e12b887ad55e1d9131", "title": "Training Unets for Image Generation"}, "31": {"path": "/README.md:926-971", "hash": "17f3e50153d4285e159ddfddb44f7d8f", "title": "Diffusion Prior for CLIP Model Training"}, "32": {"path": "/README.md:972-1009", "hash": "5fcbd01cbdac57613e3bec6090be2abb", "title": "Train Diffusion Prior with EMA and Sampling"}, "33": {"path": "/README.md:1011-1046", "hash": "77592875f6502df85e892726d9b165e5", "title": "Decoder Training and Image Generation"}, "34": {"path": "/README.md:1046-1050", "hash": "aadfbae6ed8932bac60a6b3aa8bb3562", "title": "WebDataset Embedding Dataset Format"}, "35": {"path": "/README.md:1051-1066", "hash": "0b712d47c7c224b6da80a9211e5091d6", "title": "Create Image Embedding Dataloader with URL Path and Optional Folder"}, "36": {"path": "/README.md:1067-1093", "hash": "f9a87a45cff705643b449bf144e088f8", "title": "Load and Verify ImageEmbeddingDataset"}, "37": {"path": "/README.md:1094-1102", "hash": "b5ead630d0af4b1d52bc3530ce34b4e9", "title": "DDPM Model: Building and Customizing"}, "38": {"path": "/README.md:1103-1113", "hash": "c49002a36de54d0ac4a5852d81f6cc6c", "title": "Comprehensive DALLE2-pytorch Tasklist"}, "39": {"path": "/README.md:1113-1121", "hash": "591fab277a8dd8e7fb98f2c6b27c6128", "title": "Diffusion Prior Model for Image Gen: Hyperparams, Cross-Scale Embedding"}, "40": {"path": "/README.md:1122-1130", "hash": "def634b26ea6693070f94300c4be6df6", "title": "DALLE2-pytorch: Implemented Tasks and Features"}, "41": {"path": "/README.md:1131-1165", "hash": "e9da8879c0fffb9eec21b49830eb0d75", "title": "Task List for DALLE2-pytorch Project"}, "42": {"path": "/README.md:1166-1198", "hash": "5ff54e55782ee4ecb57fd854a0b5ba29", "title": "BibTeX Entry Template\nThe title: BibTeX Entry Template"}, "43": {"path": "/README.md:1199-1225", "hash": "e54d5d7b9686228f57d5425706afe59f", "title": "CrossFormer: Vision Transformer with Cross-Scale Attention"}, "44": {"path": "/README.md:1226-1261", "hash": "b3828d71507501318aaf1b9a61376b0c", "title": "BibTeX Entries for Recent Diffusion Model Research"}, "45": {"path": "/README.md:1262-1293", "hash": "63b69e83dd96d6f90b678a10a85292ee", "title": "BibTeX Entry Structure"}, "46": {"path": "/README.md:1294-1311", "hash": "3891dee50caa9ef78db6cd433bf5c56f", "title": "BibTeX Citation Format for Two Papers"}, "47": {"path": "/configs/README.md", "hash": "70fd22a6106aed0303a8731e303c9ee1", "title": "Customizable DALLE2 Training Configs"}, "48": {"path": "/configs/README.md:1-24", "hash": "1647fe08b9d3df53a1c60800cefad7ce", "title": "DALLE2 Training Configuration Guide"}, "49": {"path": "/configs/README.md:25-40", "hash": "31680725a7aa2253e4ca058203315067", "title": "U-Net Model Configuration Options"}, "50": {"path": "/configs/README.md:41-51", "hash": "b2b0cba54534dfdf88890a6b90c2d327", "title": "Flexible Dataloader Configuration"}, "51": {"path": "/configs/README.md:51-58", "hash": "0d26fe7e4ed0df9288bd7ab88b326ccc", "title": "Shard Allocation and Dataset Configurations"}, "52": {"path": "/configs/README.md:60-74", "hash": "8c15f55708caca3c7af7ade448ddd8b6", "title": "Training Hyperparameters Control"}, "53": {"path": "/configs/README.md:74-87", "hash": "3bcbb31ef12ed29feaf8245caeac5eba", "title": "DALLE2 Model Training Configurations"}, "54": {"path": "/configs/README.md:87-98", "hash": "1cdca2264643bfb3a169bbbb1ba559b7", "title": "Tracking and Metrics for DALLE2-pytorch"}, "55": {"path": "/configs/README.md:99-116", "hash": "9aed744435134f2a43a07108e953fe84", "title": "DALLE2-PyTorch Configuration Settings"}, "56": {"path": "/configs/README.md:117-141", "hash": "1daedaa93c2d99a555693c4d00f44e11", "title": "Configuring DALLE2-pytorch: Logging and Loading Options"}, "57": {"path": "/configs/README.md:142-164", "hash": "cd035f0f41533c229af9bf0e86f6b63e", "title": "Checkpoint File Loading and Saving Options"}, "58": {"path": "/configs/README.md:165-182", "hash": "655487173e6178cf43cbc116bf17b341", "title": "Saving Options for Models and Metadata"}, "59": {"path": "/configs/README.md:183-185", "hash": "3a03188c1fb26c6e602c5da079393afa", "title": "Configuring Wandb Run Paths"}, "60": {"path": "/dalle2_pytorch/__init__.py", "hash": "f1f3fb757087e7bfd80634a1f467d1d9", "title": "DALLE2-PyTorch Library Imports"}, "61": {"path": "/dalle2_pytorch/cli.py", "hash": "1058027a5ccd28c6402c1957810b5329", "title": "DALL-E2 Image Generation CLI"}, "62": {"path": "/dalle2_pytorch/cli.py:1-33", "hash": "83ec79abc3331d0acd89dd98d346f60f", "title": "DALL-E 2 Command-Line Interface"}, "63": {"path": "/dalle2_pytorch/cli.py:34-52", "hash": "582b56369d06617971ec7e0d29a67106", "title": "DALL-E2 Image Generation"}, "64": {"path": "/dalle2_pytorch/dalle2_pytorch.py", "hash": "cf09ae558df8eecb6add5ea2ff626f67", "title": "Dalle2-Python: AI Image Generation"}, "65": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1-49", "hash": "ec51f6c4fe664778752a357a0e5e98c9", "title": "Image Processing and Modeling Library"}, "66": {"path": "/dalle2_pytorch/dalle2_pytorch.py:50-96", "hash": "1937867b341b4710b7576eadba65bb1c", "title": "Utility Functions"}, "67": {"path": "/dalle2_pytorch/dalle2_pytorch.py:97-133", "hash": "21f7980852b351ae13140ffb8a13967e", "title": "Helper Functions for Python Lists and Functions"}, "68": {"path": "/dalle2_pytorch/dalle2_pytorch.py:135-179", "hash": "0074949935ff4f41ec9602a5e1d6ab4c", "title": "Gradient Control and Model Utilities"}, "69": {"path": "/dalle2_pytorch/dalle2_pytorch.py:180-214", "hash": "3f2ac1636a7ec7116d9cf0f146b67b64", "title": "Image Normalization and CLIP Model Adapter in DALLE2-PyTorch"}, "70": {"path": "/dalle2_pytorch/dalle2_pytorch.py:215-257", "hash": "cfa22570b5a802d1ec557460161276bf", "title": "Clip Model Embedding Adapter"}, "71": {"path": "/dalle2_pytorch/dalle2_pytorch.py:258-289", "hash": "3f12ef2ff6850cb9b17beec2338aeb92", "title": "CoCaAdapter: DALL-E 2 Base Adapter"}, "72": {"path": "/dalle2_pytorch/dalle2_pytorch.py:290-319", "hash": "54249b7db63317321d0e9beef102af5e", "title": "CLIP-Based Text-to-Image Model"}, "73": {"path": "/dalle2_pytorch/dalle2_pytorch.py:320-360", "hash": "bd7fe1ff7df3199b1def730eca1201a5", "title": "Neural Text-to-Image Generation with PyTorch"}, "74": {"path": "/dalle2_pytorch/dalle2_pytorch.py:361-390", "hash": "816fc272db8997ba479077fa5bf1e4a9", "title": "CLIP Embedding for Text"}, "75": {"path": "/dalle2_pytorch/dalle2_pytorch.py:391-433", "hash": "027adf018e8b58d04359a81e038fb800", "title": "Dalle2 PyTorch: Text Class and Model Components"}, "76": {"path": "/dalle2_pytorch/dalle2_pytorch.py:434-459", "hash": "aa99e0e4dac8041912eccf64d1265b9d", "title": "Embedded Text Generation with CLIP"}, "77": {"path": "/dalle2_pytorch/dalle2_pytorch.py:460-488", "hash": "ec19d720254fbd9c85ed91b98328a9f9", "title": "DALLE2-PyTorch Helper Functions"}, "78": {"path": "/dalle2_pytorch/dalle2_pytorch.py:489-519", "hash": "4faa2b8507db3726edca7387708cd6f1", "title": "Adaptive Quantile Regression with Cosine or Linear Schedule"}, "79": {"path": "/dalle2_pytorch/dalle2_pytorch.py:520-548", "hash": "fd3ec15ed5c22e3e94041639af6efc1a", "title": "Noise Scheduler Beta Functions"}, "80": {"path": "/dalle2_pytorch/dalle2_pytorch.py:549-580", "hash": "bf2cfa69cbb1ca611d2d0aaeb63247b7", "title": "Beta Schedule and Loss Function Registration"}, "81": {"path": "/dalle2_pytorch/dalle2_pytorch.py:581-601", "hash": "de7f17c7460c23f8f6b9bf637929af26", "title": "Diffusion Buffers Calculation and Clipping"}, "82": {"path": "/dalle2_pytorch/dalle2_pytorch.py:602-620", "hash": "4d3c234d4970b834f18e74c20490b89b", "title": "Loss Reweighting and Posterior Calculation"}, "83": {"path": "/dalle2_pytorch/dalle2_pytorch.py:622-645", "hash": "6dc0abe496fd690eb20a5103ba47e700", "title": "Neural Image Generation Functions"}, "84": {"path": "/dalle2_pytorch/dalle2_pytorch.py:647-677", "hash": "b172509fe3df3b31962c381823384a22", "title": "Reweighting Loss and Predicting Values"}, "85": {"path": "/dalle2_pytorch/dalle2_pytorch.py:678-711", "hash": "49a8087ad0954beef89af7a7fda719c2", "title": "Layer Normalization Implementation"}, "86": {"path": "/dalle2_pytorch/dalle2_pytorch.py:712-750", "hash": "42dafe8dc90c483a9e1ec51b3b0851af", "title": "Residual MLP with Normalization and Activation in DALLE2 PyTorch"}, "87": {"path": "/dalle2_pytorch/dalle2_pytorch.py:751-792", "hash": "34a8405d4f75be480774390ab715ef66", "title": "DALL-E 2 Neural Architecture PyTorch"}, "88": {"path": "/dalle2_pytorch/dalle2_pytorch.py:794-816", "hash": "45a4b5b95db16d0e05f121614685f381", "title": "DALLE2-pytorch Attention Layer"}, "89": {"path": "/dalle2_pytorch/dalle2_pytorch.py:817-858", "hash": "1bf1a4273fe22d68d22a9324408e5e05", "title": "Post-Activation Normalization with Nested Attention"}, "90": {"path": "/dalle2_pytorch/dalle2_pytorch.py:859-891", "hash": "4097034a23f14ef7610ed954d41e2ede", "title": "Implementing DALL\u00b7E 2 Self-Attention Layer"}, "91": {"path": "/dalle2_pytorch/dalle2_pytorch.py:892-928", "hash": "a1bdd09a47e2855e8cffe69fc4feb48d", "title": "Multi-Head Attention Calculation"}, "92": {"path": "/dalle2_pytorch/dalle2_pytorch.py:930-961", "hash": "b8e5b5d6edfa7a1887438d7698aa110c", "title": "CausalTransformer Dimensional Manipulation"}, "93": {"path": "/dalle2_pytorch/dalle2_pytorch.py:962-993", "hash": "315b2fec8ae07318ceaa384e9e9fbb60", "title": "Diffusion Prior Network Model\n\nThe title captures the essence of the content, highlighting the DiffusionPriorNetwork model and its various layers and components. It is concise and informative, fitting within the 3 to 7 word limit provided"}, "94": {"path": "/dalle2_pytorch/dalle2_pytorch.py:994-1017", "hash": "74a3b4c370ec041546af02327c632007", "title": "Dalle2 PyTorch Model Architecture"}, "95": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1018-1052", "hash": "b81f2053d2ea5e887814533b0759adbb", "title": "Scaled Causal Transformer Model"}, "96": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1053-1076", "hash": "f2f0cbf2f62475182ece0ec186026ae4", "title": "Model Initialization for DALLE-2"}, "97": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1078-1103", "hash": "b724eca8f037080f828eb86a33cfc42e", "title": "Prepping DALL-E 2 Input Data"}, "98": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1105-1134", "hash": "c152863fdc0a536307cc20e8e8b143d6", "title": "Masking and Type Conversion in DALL-E 2 PyTorch"}, "99": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1135-1174", "hash": "c20095b7b3aecff1deda60b72d768d34", "title": "DiffusionPrior: Causal Transformers for DDPM"}, "100": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1175-1188", "hash": "9c90af65ef3d9732032702d3990a6c92", "title": "DALLE2 Model Initialization"}, "101": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1190-1214", "hash": "d3ff6f596427caeba3e163a6759d6494", "title": "Model Initialization"}, "102": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1216-1227", "hash": "8a18bc78a4d85586080e92f84b9d8eb4", "title": "Dalle2 PyTorch: Dimension Consistency and CLIP Check"}, "103": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1229-1255", "hash": "8e790dce86b9ccb82a85e7bee048e649", "title": "Dalle2 PyTorch Parameters and Properties"}, "104": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1256-1274", "hash": "00031baf1636740263d39ccedd7094e8", "title": "Conditional Dropout Assertion"}, "105": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1276-1296", "hash": "52468d81c326bd6d3293503eadfbed82", "title": "DDPMLearner: PyTorch Image Sampling Functions"}, "106": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1296-1316", "hash": "85ea2bd52aeeb1d9579c92cad5847243", "title": "Dalle2 PyTorch: Image Sampling and Embedding Functions"}, "107": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1318-1342", "hash": "dde395ff6854317ef4cf5e60e119f633", "title": "Neural Network Image Generation"}, "108": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1344-1372", "hash": "8b703b49cdb19d90bcebef01b5d3e006", "title": "L2-Norm Clamping for Dalle2 PyTorch Noise Prediction"}, "109": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1373-1396", "hash": "17d03202a6e044af39b4c8d1c07ee4b4", "title": "DALLE2-pytorch Embedding Scaling"}, "110": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1397-1425", "hash": "40c530bf783216d641e8b4ccb8ecb447", "title": "Loss Calculation Method in Dalle2_PyTorch"}, "111": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1426-1454", "hash": "d993bb619982780c29777a117891731c", "title": "DALL-E 2 Image Embedding Sampling"}, "112": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1456-1481", "hash": "7ab4cfc0f861f9165a4629cfef3a1955", "title": "Retrieve Image Embeddings and Compute Similarity"}, "113": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1482-1504", "hash": "e551098e8cedd8afad992ac046349dbd", "title": "Image and Text Encoding Verification"}, "114": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1506-1543", "hash": "3527b1cc1dfcb196903351b8a9016e5a", "title": "Upsampling Techniques in Dalle2 PyTorch"}, "115": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1544-1574", "hash": "8bf70f03aa805f46ea7ee1f644415cb3", "title": "WeightStandardizedConv2d: Fusion of Group Norm & Conv2D"}, "116": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1575-1605", "hash": "d44f684788b7e927c485c012292ef544", "title": "3 Classes: Reshape, Embedding, ConvBlock"}, "117": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1607-1649", "hash": "d4500496111eddc6042c4afce7cf3430", "title": "ResnetBlock: Compute, Project, Normalize"}, "118": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1650-1676", "hash": "1db17b014979cb8c2be1db9c6125abe0", "title": "Encoder-Decoder Architecture with Residual Connections and Cross-Attention"}, "119": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1678-1711", "hash": "17ef43449c44535bfaeb7dc245318657", "title": "CrossAttention Class Initialization"}, "120": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1712-1743", "hash": "3f16db99142e427e8ec6d73224906e29", "title": "Multi-Head Attention Layer Definition"}, "121": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1745-1780", "hash": "80cb3535b7225958945640c69e448572", "title": "Multi-Head Linear Attention Module"}, "122": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1782-1816", "hash": "b6aeaf1d88bf18237fa685ed5ce3d920", "title": "Attention and Transformation Layer"}, "123": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1817-1849", "hash": "36a73d660e9aabef860524942352ac46", "title": "Convolutional Network with Adjustable Upsampling Combiner"}, "124": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1850-1877", "hash": "a3f1f438bfc4bad8a07fbe2301729246", "title": "Unet Model: Dalle2 PyTorch Implementation"}, "125": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1878-1895", "hash": "b0ed3832a3a6ecc3d73b5dce8fe47387", "title": "DALLE2 Model Customization and Optimization"}, "126": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1896-1927", "hash": "c34f724ec3711e2ec1e9ab86bb8bde0d", "title": "DDPM Model Initialization: Parameters and Hyperparameters"}, "127": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1929-1956", "hash": "d1ebb3e3adfd7294a2e6c49da0cdc57d", "title": "DALL-E 2 Input Processing Layers"}, "128": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1957-1981", "hash": "821e5a2893cb11065f3b66bafee4a140", "title": "DALL-E 2 Model Architecture: Linear, Layer Normalization, GELU"}, "129": {"path": "/dalle2_pytorch/dalle2_pytorch.py:1983-2006", "hash": "a64c634624d050d79714a85bfa5f73be", "title": "Initializing DALL-E 2 Model Components"}, "130": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2008-2035", "hash": "c71efafd24cb1fafc970924c5ed5ea74", "title": "DALL-E 2 Model Initialization Code"}, "131": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2037-2059", "hash": "053884c701b783c8a62a70737084f632", "title": "Efficient UNet Initialization"}, "132": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2060-2076", "hash": "47624411dea4fcb3a05197dc4c5774c1", "title": "Neural Network Module Initializer"}, "133": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2076-2094", "hash": "b745c31c3594abf9487265cbc45780e1", "title": "ResNet Blocks with Attention Layers"}, "134": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2094-2116", "hash": "0ee372e04bb5128d644b588c95e9880a", "title": "DALL\u00b7E 2 Model Architecture in PyTorch"}, "135": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2118-2146", "hash": "94756a9c4c9c31d2b2a90bfdd96e2332", "title": "Uneting DDPM Parameters Checker"}, "136": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2147-2185", "hash": "0ab216b2063d0ddeee0043ef573b9f93", "title": "Conditional Scaling in Dalle2 PyTorch"}, "137": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2187-2216", "hash": "5594d596d1b7f930543fddec041eabc0", "title": "Low Resolution Conditioning in DALL-E 2"}, "138": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2217-2243", "hash": "1e59aa79e6c7b5c8ca7edb2784284079", "title": "Conditional Dropout in DALL-E 2 PyTorch"}, "139": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2244-2265", "hash": "47da6a9ddd134c538488b94f94c56794", "title": "Preparing Input for Classifier-Free Guidance Model"}, "140": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2267-2288", "hash": "494067e93a36e67e18156701f2ae7a87", "title": "Text Padding and Masking in DALLE-PyTorch"}, "141": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2289-2318", "hash": "81aa6df9db51eec5ce872dd885317697", "title": "Conditioning Token Handling in DALLE2-pytorch"}, "142": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2320-2356", "hash": "bf20180b673d4954454637f03e5f6ab2", "title": "U-Net Model Initialization in Dalle2PyTorch"}, "143": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2356-2393", "hash": "8b824cd20e64894d8b9232761e06e0e2", "title": "Upscaling Network and Conditioner"}, "144": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2394-2418", "hash": "193e7f7fb5a84198f0c25ee78e712041", "title": "Generate Noise Image Object with Parameters"}, "145": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2419-2447", "hash": "f5bd437dbd1ef4342b1503596222b95b", "title": "Conditional Resize, Blur, Downsample Function"}, "146": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2448-2471", "hash": "e62b31c83f17470ef9fc91e3fd784ab3", "title": "Gaussian Blur and Noise Image Conditioning"}, "147": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2473-2496", "hash": "7a393efc88c7fcdca288ee63cad257bc", "title": "Decoder Class Parameters"}, "148": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2497-2509", "hash": "afe1327ae94e8cc9d7d9cc1dcfddd366", "title": "DDPM Configuration in DALLE2-PyTorch"}, "149": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2509-2526", "hash": "0dfc74a913e6137feb8f2b09c7355421", "title": "Initializing Dalle2 Object with Parameters"}, "150": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2527-2555", "hash": "efab0a10f77e264e80df09201b604d9d", "title": "CoCa Adapter and Model Freezing in Dalle2 PyTorch"}, "151": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2557-2577", "hash": "7933287c9207e8f553e1efcf54214929", "title": "Initializing DALL-E 2 Networks"}, "152": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2578-2597", "hash": "17198c1986b6f7e73902a897916f7d48", "title": "Setting Up Unets and Vaes for Dalle2 Model"}, "153": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2598-2621", "hash": "4a3569c6ab78e1f50f5aa58854365d79", "title": "VAE Instance Appending and Sampling"}, "154": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2623-2641", "hash": "7f8ed604d81599cf3ac0c6d030e8730d", "title": "Noise Scheduler Creation for UNETs"}, "155": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2642-2666", "hash": "ca2d5630f259a8fdf1d51b51fa83aab4", "title": "Model Parameters Configuration"}, "156": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2668-2691", "hash": "8f1f006f7da095425696b527a430be09", "title": "Lowres Unet Initialization"}, "157": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2692-2725", "hash": "42595b2a23421a7052e50a757d4d33e8", "title": "Dynamic Image Generation Model Setup"}, "158": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2726-2762", "hash": "cbe89bc63527c5f0326a2176dd552dd3", "title": "UNET Collection Management and Inference"}, "159": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2764-2785", "hash": "54ea9c42910af2f770afdcee92cac7e5", "title": "Dynamic Threshold and Classifier-Free Guidance"}, "160": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2785-2803", "hash": "f4834c63f28d671cd5379477f7124b59", "title": "Image Decoding with Pre-trained UNET"}, "161": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2804-2820", "hash": "18ea16dd4dc58f77ad847d03d8ac1c22", "title": "Posterior Variance Calculator"}, "162": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2820-2836", "hash": "ea8e6dd15ab7f640363e8457b5fd3212", "title": "DDPM: Predicting Values in Denoising Diffusion Models"}, "163": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2837-2866", "hash": "4c0d960d8924c9cbb5c347b15e556708", "title": "Initialize Image and Variables\"\nor \n\"Image and Variable Initialization"}, "164": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2867-2890", "hash": "37a4c47c3136afb5c258ac5bfddee178", "title": "Inpainting DALLE 2 Image Sequences"}, "165": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2891-2917", "hash": "c4a9706471b317ab44ccea2bc08f23e4", "title": "Diffusion-Based Image Denoising with DALLE2"}, "166": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2918-2946", "hash": "2f9281ad5ada72e36c324753fcc100aa", "title": "DDIM Sampling Function"}, "167": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2947-2972", "hash": "0efdf436e623ce67ff7c1ea1f8721015", "title": "Diffusion Model Inpainting with DALLE-2 PyTorch"}, "168": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2973-2994", "hash": "3195ae06b7219d456c4962b0c6a29022", "title": "Conditional Image Generation Model"}, "169": {"path": "/dalle2_pytorch/dalle2_pytorch.py:2996-3017", "hash": "421f1117bec1317d8bca128d211d1d28", "title": "Predictive Noise Processing in DALL-E 2"}, "170": {"path": "/dalle2_pytorch/dalle2_pytorch.py:3019-3039", "hash": "69d9e2ef546eb67571ee2e031b15fbe3", "title": "DDPM or DDIM Sampling in p_sample_loop"}, "171": {"path": "/dalle2_pytorch/dalle2_pytorch.py:3041-3075", "hash": "ab3683c88c03ff27145d6ef5e22be2b6", "title": "DALLE2-pytorch Self-Conditioning Sampling"}, "172": {"path": "/dalle2_pytorch/dalle2_pytorch.py:3077-3098", "hash": "96d6c5a256bb94e6d30fe5bc20b9c833", "title": "Calculating Loss with Variable Targets"}, "173": {"path": "/dalle2_pytorch/dalle2_pytorch.py:3100-3115", "hash": "57aae25e16552f6745e5987fb3bc86f2", "title": "KL Divergence and Decoder Loss Calculation"}, "174": {"path": "/dalle2_pytorch/dalle2_pytorch.py:3117-3149", "hash": "0d38efc4df75bab6931cef478dd8afdd", "title": "Variational Bayes Loss Sampling Function"}, "175": {"path": "/dalle2_pytorch/dalle2_pytorch.py:3150-3163", "hash": "d6bf81a9f32fdf90513b089e487f864b", "title": "Valid Input Checker"}, "176": {"path": "/dalle2_pytorch/dalle2_pytorch.py:3165-3182", "hash": "11913346c7e369bb6796f81657140ade", "title": "CUDA-Powered Unet Processing"}, "177": {"path": "/dalle2_pytorch/dalle2_pytorch.py:3183-3204", "hash": "b8f634e725331b96103d654e980095ea", "title": "Denoising Diffusion Model Image Processing"}, "178": {"path": "/dalle2_pytorch/dalle2_pytorch.py:3205-3233", "hash": "71d8bebb9ec4654bf525cabeb743dd69", "title": "UNet Image Generation"}, "179": {"path": "/dalle2_pytorch/dalle2_pytorch.py:3233-3251", "hash": "04ff156369d071fdf231bba22d7d3e41", "title": "U-Net Initialization in Dalle2 PyTorch"}, "180": {"path": "/dalle2_pytorch/dalle2_pytorch.py:3252-3267", "hash": "36f975ba9d10105ac51002a9c2f177e3", "title": "Input Validation for CLIP Model and Text Encodings"}, "181": {"path": "/dalle2_pytorch/dalle2_pytorch.py:3267-3285", "hash": "934cd3765aceb74e983827542526b7ae", "title": "Conditional VAE Image Processing"}, "182": {"path": "/dalle2_pytorch/dalle2_pytorch.py:3285-3319", "hash": "05e58cab441fa9579936f57ce19f1f50", "title": "DALLE2 Diffusion Model: Losses and Lowres Conditional Images"}, "183": {"path": "/dalle2_pytorch/dalle2_pytorch.py:3320-3340", "hash": "e4c6dea47de4083753f719595450b740", "title": "Text-to-Image Model: DALL-E 2 PyTorch Implementation"}, "184": {"path": "/dalle2_pytorch/dataloaders/README.md", "hash": "79bd5befb2ece680064b6e874d7b207a", "title": "DALLE2 PyTorch Datasets & Dataloaders"}, "185": {"path": "/dalle2_pytorch/dataloaders/README.md:1-5", "hash": "c4abb955ffadfef9c43b3bad691de73e", "title": "Efficient Dataloaders for Decoder Training"}, "186": {"path": "/dalle2_pytorch/dataloaders/README.md:5-19", "hash": "45be1155c9db40a0e10a787dc8f6586a", "title": "Create Image Embedding Dataloader"}, "187": {"path": "/dalle2_pytorch/dataloaders/README.md:20-37", "hash": "2f67f2de2203b766dc1d7f15597d6d78", "title": "Dataloader Configuration and Dataset Creation"}, "188": {"path": "/dalle2_pytorch/dataloaders/README.md:38-53", "hash": "3b66b4f5c2f18f26eb9ca1bc0c8b40fc", "title": "Disable Resampling in Prior Embedding Dataset"}, "189": {"path": "/dalle2_pytorch/dataloaders/README.md:54-75", "hash": "df2f77eba5d0858215f199fccd4fc61f", "title": "Data Splitter for Distributed DALLE2 Training"}, "190": {"path": "/dalle2_pytorch/dataloaders/__init__.py", "hash": "251956661f3d268fc639d40c8bfc0810", "title": "Loading Datasets for DALLE2-pytorch"}, "191": {"path": "/dalle2_pytorch/dataloaders/decoder_loader.py", "hash": "8fc6fc1bd642ebb6c5c9bee7dca52b0a", "title": "Dalle2 Dataset Loaders: Exception Handling"}, "192": {"path": "/dalle2_pytorch/dataloaders/decoder_loader.py:1-29", "hash": "437254aabc71677fe2602d9a11426f54", "title": "Decoder Loader: Functions for DALLE-PyTorch"}, "193": {"path": "/dalle2_pytorch/dataloaders/decoder_loader.py:30-49", "hash": "e859e66739f98538c420dceb3196120a", "title": "Load Embeddings from WebDataset Tar File"}, "194": {"path": "/dalle2_pytorch/dataloaders/decoder_loader.py:50-67", "hash": "8eaf44759878ae1d0e9d28192f2e3941", "title": "Embedding Loader for Dalle2 PyTorch"}, "195": {"path": "/dalle2_pytorch/dataloaders/decoder_loader.py:69-84", "hash": "f8672987f04a112fc4cfbcddff97cd24", "title": "Checks Tarfile Embeddings Matching"}, "196": {"path": "/dalle2_pytorch/dataloaders/decoder_loader.py:85-111", "hash": "dc805966bb62c33c937a9e9642d577e1", "title": "Combine Image and Text Embeddings"}, "197": {"path": "/dalle2_pytorch/dataloaders/decoder_loader.py:112-136", "hash": "8b4eeafcd07d93006e7d869f4ad75b2b", "title": "Decoder Loader Data Pipeline"}, "198": {"path": "/dalle2_pytorch/dataloaders/decoder_loader.py:137-151", "hash": "70a06e74bbac5691ccd9c4607be0d75c", "title": "WebDataset Loader Function"}, "199": {"path": "/dalle2_pytorch/dataloaders/decoder_loader.py:152-169", "hash": "30742ab337a7705c66e7075818e8da30", "title": "Decoder Loader: WebDataset Handler"}, "200": {"path": "/dalle2_pytorch/dataloaders/decoder_loader.py:170-185", "hash": "3a3730a80a2b98cfc30fbd2af7980a46", "title": "S3 Link Check and Shuffling for Dataset"}, "201": {"path": "/dalle2_pytorch/dataloaders/decoder_loader.py:186-200", "hash": "0ea17a359a611d444162d237071ec7f3", "title": "DALLE2 Decoder Loader Implementation"}, "202": {"path": "/dalle2_pytorch/dataloaders/decoder_loader.py:201-225", "hash": "f8414ab22c89eb47e5021d948e28a15c", "title": "Image Embedding Dataloader Creation"}, "203": {"path": "/dalle2_pytorch/dataloaders/decoder_loader.py:226-240", "hash": "8a374a8b569a42a776e1c4fc83c244a4", "title": "One-Line Image Embedding Dataset Dataloader"}, "204": {"path": "/dalle2_pytorch/dataloaders/decoder_loader.py:240-261", "hash": "08312f3d0dda4013b3c736895d867581", "title": "Decoder Data Loader Function"}, "205": {"path": "/dalle2_pytorch/dataloaders/decoder_loader.py:262-266", "hash": "36f7fcb838dee450f0dbe1646cb4c7e7", "title": "Decoder Data Loader Configuration"}, "206": {"path": "/dalle2_pytorch/dataloaders/prior_loader.py", "hash": "6197cfdcceca299de07b32462da5eeb8", "title": "Efficient DALL-E 2 Data Loaders"}, "207": {"path": "/dalle2_pytorch/dataloaders/prior_loader.py:1-40", "hash": "d57ffdc93f05b8b2772c13ca27811937", "title": "Simplified Embedding Dataset Loader"}, "208": {"path": "/dalle2_pytorch/dataloaders/prior_loader.py:41-72", "hash": "bb19fe10fe4e93f3e886be2f1c2f7e4c", "title": "Custom DALLE2 Dataset Class"}, "209": {"path": "/dalle2_pytorch/dataloaders/prior_loader.py:73-112", "hash": "172603f50642961b670c32e9b99c1b69", "title": "DALL-E 2 Data Loader"}, "210": {"path": "/dalle2_pytorch/dataloaders/prior_loader.py:114-149", "hash": "09cf527e4be981b7f1db31e05941a556", "title": "Defining EmbeddingReader Functions"}, "211": {"path": "/dalle2_pytorch/dataloaders/prior_loader.py:151-187", "hash": "8f1611f05bbc95f39da6609ea6a85d62", "title": "Split Embedding Reader"}, "212": {"path": "/dalle2_pytorch/dataloaders/prior_loader.py:189-210", "hash": "372f71d550a08e77c2ae828389899112", "title": "Creating PyTorch Dataloaders for Image-Text Pairs"}, "213": {"path": "/dalle2_pytorch/dataloaders/prior_loader.py:211-242", "hash": "1082cd54c7521b948c2783f854e0f175", "title": "Split and Wrap Data Loader"}, "214": {"path": "/dalle2_pytorch/dataloaders/prior_loader.py:243-271", "hash": "99b51aae75da9dd5683cc89c90566b89", "title": "Creating PriorEmbeddingDataset for Datasets"}, "215": {"path": "/dalle2_pytorch/dataloaders/prior_loader.py:273-282", "hash": "e8e201775b4f34c6d87578608e66e18e", "title": "Prior Embedding Datasets Creation"}, "216": {"path": "/dalle2_pytorch/dataloaders/simple_image_only_dataloader.py", "hash": "7c3788e36fb20519a3d5002fa39c4646", "title": "Simple Image Dataloader"}, "217": {"path": "/dalle2_pytorch/dataloaders/simple_image_only_dataloader.py:1-47", "hash": "97702003308938130dbd1c3340d5c247", "title": "Simple Image Dataset Loader"}, "218": {"path": "/dalle2_pytorch/dataloaders/simple_image_only_dataloader.py:48-59", "hash": "c38c3be4cd3e5aa07476681cf5cd70e9", "title": "Simple Image Dataset DataLoader"}, "219": {"path": "/dalle2_pytorch/optimizer.py", "hash": "0061ec805377f06f0d77cefbe5d71c8e", "title": "Optimizer Creation and Filtering"}, "220": {"path": "/dalle2_pytorch/tokenizer.py", "hash": "3f32dac09bdd3c0bef18a6e1b45e4f27", "title": "Streamlined DALL-E2 Tokenization"}, "221": {"path": "/dalle2_pytorch/tokenizer.py:1-42", "hash": "deb895f8effff3491747e1df7b32408e", "title": "DALL-E2 Tokenizer: Easy BPE-Free Training"}, "222": {"path": "/dalle2_pytorch/tokenizer.py:43-69", "hash": "aac94201286a6415cbfb6272926a440b", "title": "Python BPE Tokenizer Class"}, "223": {"path": "/dalle2_pytorch/tokenizer.py:70-98", "hash": "d00a0642cfea48fc6943b687cb3f3e95", "title": "Byte-Pair Encoding Tokenizer"}, "224": {"path": "/dalle2_pytorch/tokenizer.py:100-126", "hash": "2eca58d301a9833eb8c753f3e887ba76", "title": "BPE Tokenizer Implementation"}, "225": {"path": "/dalle2_pytorch/tokenizer.py:128-151", "hash": "0db5681e623230f90d9f0a25546b84ef", "title": "SimpleTokenizer: Converting Encoded Tokens to Text"}, "226": {"path": "/dalle2_pytorch/tokenizer.py:153-182", "hash": "5187556507380c3399918e473ad9f109", "title": "YTTM Tokenizer in PyTorch"}, "227": {"path": "/dalle2_pytorch/tokenizer.py:183-191", "hash": "03818c103f0e21816338951c3db2165d", "title": "Token Truncation and Conversion"}, "228": {"path": "/dalle2_pytorch/trackers.py", "hash": "572dc1bc4245e73f622b733c37122fb7", "title": "Trackers and Loggers Management"}, "229": {"path": "/dalle2_pytorch/trackers.py:1-35", "hash": "87b04d27b89776d8308da8198d5384c6", "title": "Base Logger Class in DALLE2-pytorch"}, "230": {"path": "/dalle2_pytorch/trackers.py:36-62", "hash": "8cc7a0558964b9d81f0e34e0ea9cd157", "title": "Logger Class with Methods for Data Logging"}, "231": {"path": "/dalle2_pytorch/trackers.py:63-94", "hash": "ec3ff44389c14087cb1f15a5c90ddb41", "title": "Logger Classes for PyTorch Tracking"}, "232": {"path": "/dalle2_pytorch/trackers.py:95-120", "hash": "aad6f67cfdb25e245918fd0b03ea4669", "title": "WandB Logger Python Class"}, "233": {"path": "/dalle2_pytorch/trackers.py:121-143", "hash": "44ac3a92a944fcc9517d9f639f9d623d", "title": "Wandb Tracker: Resume and Log Data"}, "234": {"path": "/dalle2_pytorch/trackers.py:145-170", "hash": "5369fed2537e0e5d95796709b82a3322", "title": "Logging and Resume Data Tracking Functionality"}, "235": {"path": "/dalle2_pytorch/trackers.py:171-200", "hash": "c5b239b904a25acb951b17b70da6d581", "title": "Logger Function for Model Checkpoints"}, "236": {"path": "/dalle2_pytorch/trackers.py:201-229", "hash": "dffc47205dfd15710289e6c7731a088f", "title": "Base Class File Loader"}, "237": {"path": "/dalle2_pytorch/trackers.py:230-251", "hash": "3b2110d6da2bf884c2e5533ea30b0de8", "title": "WandbLoader: Loading Models from W&B Runs"}, "238": {"path": "/dalle2_pytorch/trackers.py:252-278", "hash": "c3d383122197ff269e4d51ba7e38761b", "title": "Wandb Data Loader Integration"}, "239": {"path": "/dalle2_pytorch/trackers.py:279-299", "hash": "7c475665ad2865febb442f22d7d961c9", "title": "PyTorch Tracker Class: Versatile Data Saving"}, "240": {"path": "/dalle2_pytorch/trackers.py:300-328", "hash": "adaa40a45eddd96ed7eb1f89df545248", "title": "Local and Wandb File Savers"}, "241": {"path": "/dalle2_pytorch/trackers.py:329-346", "hash": "69b74ed3067f2dcf3d373a23d671bf9f", "title": "W&B Run Initialization"}, "242": {"path": "/dalle2_pytorch/trackers.py:347-365", "hash": "60ab9c624d53e9a21734e405854bfb4f", "title": "HuggingFace Saver Class"}, "243": {"path": "/dalle2_pytorch/trackers.py:366-382", "hash": "df1bf1b62bebe9c5e2f85ad687380791", "title": "HuggingFace Repo File Saver"}, "244": {"path": "/dalle2_pytorch/trackers.py:383-407", "hash": "3a4f13b36622821e22bea9a831b6eb21", "title": "Creating and Initializing Savers and Trackers"}, "245": {"path": "/dalle2_pytorch/trackers.py:408-427", "hash": "641a9e87c0c7c002c626814d65648086", "title": "Auto-Resume Tracker Setup"}, "246": {"path": "/dalle2_pytorch/trackers.py:428-442", "hash": "951d95e09cd4d09db8655a1e9da7274f", "title": "Auto-Resume Data Validator"}, "247": {"path": "/dalle2_pytorch/trackers.py:443-459", "hash": "52c4511fdcfa9f3716c953a53bb0f355", "title": "Auto Resume Tracker Initialization"}, "248": {"path": "/dalle2_pytorch/trackers.py:460-489", "hash": "8bf2337c5f8699d2edb34bdc1eebcad0", "title": "Initializing Trackers in Dalle2PyTorch"}, "249": {"path": "/dalle2_pytorch/trackers.py:491-517", "hash": "6934bd1f4b340b9f20c077685ed9aede", "title": "Tracking Dalle2-PyTorch Data: Saving, Logging, and Metadata"}, "250": {"path": "/dalle2_pytorch/trackers.py:517-531", "hash": "4fd816fdf7744e68908ac38a3eb33d9d", "title": "Saving Trainer State: Checkpoint vs Model"}, "251": {"path": "/dalle2_pytorch/trackers.py:532-551", "hash": "493b946546fca3bb4698b5141e01b2d6", "title": "Remove CLIP from Model State"}, "252": {"path": "/dalle2_pytorch/trackers.py:552-575", "hash": "711be9a74fff64beb19e2d5a5a85bc66", "title": "Saving and Checkpointing Model Files"}, "253": {"path": "/dalle2_pytorch/trackers.py:576-598", "hash": "a886a5675dcd96c00c26115964073019", "title": "Checkpoint Recall Manager"}, "254": {"path": "/dalle2_pytorch/trackers.py:598-598", "hash": "783665b417c93ceb39d282dccdf472c6", "title": "No Loader, No Resume Error"}, "255": {"path": "/dalle2_pytorch/train_configs.py", "hash": "221c5dfc2bd4b98ddae581aded872cc3", "title": "DALL-E 2 PyTorch Training Utilities"}, "256": {"path": "/dalle2_pytorch/train_configs.py:1-43", "hash": "d1c78ff526976e8a6ae6966bc4c9dc66", "title": "Training Configs for DALL-E 2 PyTorch"}, "257": {"path": "/dalle2_pytorch/train_configs.py:44-73", "hash": "9925e95762ff2e04e194b3c1cbf7d9d9", "title": "Tracker Log Config Classes"}, "258": {"path": "/dalle2_pytorch/train_configs.py:74-102", "hash": "2528d56a39ad9e5019604047bc3bf6de", "title": "Tracker Config and Loader"}, "259": {"path": "/dalle2_pytorch/train_configs.py:103-129", "hash": "92bc3a12cc238d52d511310c7042ff2e", "title": "Tracker Function: Saver and Component Management"}, "260": {"path": "/dalle2_pytorch/train_configs.py:130-167", "hash": "de88d4abc91469467743f0ca71edcdd1", "title": "Neural Network Configurations for Diffusion Models"}, "261": {"path": "/dalle2_pytorch/train_configs.py:168-201", "hash": "7e01ac393e885715ebc184d527b66859", "title": "Training Config Class"}, "262": {"path": "/dalle2_pytorch/train_configs.py:202-223", "hash": "cac0b4fd4050e6ebc6de1fd46e45dc73", "title": "Train Configs for Diffusion Prior Model"}, "263": {"path": "/dalle2_pytorch/train_configs.py:224-255", "hash": "1b184a62970e6aec3be71217cb4b36e5", "title": "Dalle-2 Model Config Classes"}, "264": {"path": "/dalle2_pytorch/train_configs.py:256-284", "hash": "4fe3830613a351f6b9fabf44c49f7826", "title": "Train DALL-E 2 with Unet and CLIP"}, "265": {"path": "/dalle2_pytorch/train_configs.py:285-309", "hash": "2a9c87580b6e9542dd9bef96234f9f49", "title": "Training Config Generator"}, "266": {"path": "/dalle2_pytorch/train_configs.py:311-329", "hash": "7709f62c909292733b208175937a824c", "title": "DecoderTrainConfig Class Options"}, "267": {"path": "/dalle2_pytorch/train_configs.py:331-361", "hash": "dfcfd05d90e61cab858edaa1ccbf019e", "title": "Decoding Training Configs"}, "268": {"path": "/dalle2_pytorch/train_configs.py:362-380", "hash": "b1e20448139c6372f95b762485cd00b2", "title": "Ensuring Non-Redundant Model Usage"}, "269": {"path": "/dalle2_pytorch/train_configs.py:380-382", "hash": "1697bd627e3e447c460995b35507aad1", "title": "Unnecessary Text Embedding Slowdown"}, "270": {"path": "/dalle2_pytorch/trainer.py", "hash": "9f422b1eda9186d6f1cefa60adb30d75", "title": "DeepSpeed Trainer Initialization and Computations"}, "271": {"path": "/dalle2_pytorch/trainer.py:1-43", "hash": "16d60546c6c6af9cf1c46de091d80874", "title": "Trainer Utilities"}, "272": {"path": "/dalle2_pytorch/trainer.py:45-78", "hash": "bb5bd8f9e28b831ad03532290115ac1a", "title": "Grouping and Casting Operations"}, "273": {"path": "/dalle2_pytorch/trainer.py:79-99", "hash": "c67aabf7a20b2602bc8546b2e7c5dbe7", "title": "DeepSpeed PyTorch Model Argument Casting"}, "274": {"path": "/dalle2_pytorch/trainer.py:100-138", "hash": "db691aea3dc306027b53853fc7c88966", "title": "Gradient Accumulation and Splitting Functions"}, "275": {"path": "/dalle2_pytorch/trainer.py:139-159", "hash": "898018841f0143a28e4b899b4b71f143", "title": "Chunked Arguments Yielding"}, "276": {"path": "/dalle2_pytorch/trainer.py:161-192", "hash": "fb75dfedc763ab86308fa506766849b9", "title": "Diffusion Prior Trainer Class"}, "277": {"path": "/dalle2_pytorch/trainer.py:194-225", "hash": "2a4aaa7dd8460bb5b44c16cd80ddbd28", "title": "Accelerator Check and Model Transfer"}, "278": {"path": "/dalle2_pytorch/trainer.py:225-249", "hash": "8e2d303eaa2fd44986548358b19a15dc", "title": "DeepSpeed Trainer Initialization"}, "279": {"path": "/dalle2_pytorch/trainer.py:251-280", "hash": "b3e1364814a5986399158fd458b84b2a", "title": "Saveable Trainer with LambdaLR"}, "280": {"path": "/dalle2_pytorch/trainer.py:281-304", "hash": "8b9a2d92a1290ade25ddc26173852df7", "title": "Efficient Checkpoint Saving for Diffusion Trainers"}, "281": {"path": "/dalle2_pytorch/trainer.py:306-327", "hash": "ac2a654607b21444ae348aa9c04cf1f0", "title": "Checkpoint Loading Function"}, "282": {"path": "/dalle2_pytorch/trainer.py:329-358", "hash": "184f3c7b4b107a2cc019de4f0fa49ddb", "title": "Warmup, Learning Rate Update, and Optimization"}, "283": {"path": "/dalle2_pytorch/trainer.py:359-386", "hash": "d401653dd2169ecf962109f7c87c2f08", "title": "Diffusion Prior Model Sampling"}, "284": {"path": "/dalle2_pytorch/trainer.py:388-423", "hash": "51556a3d98c450d481b042e00e27aead", "title": "Embedding Trainer with Chunking"}, "285": {"path": "/dalle2_pytorch/trainer.py:424-454", "hash": "d3cd8e35f5862a999e4e7c99db3dc489", "title": "Batch-Based Decoder Trainer"}, "286": {"path": "/dalle2_pytorch/trainer.py:456-481", "hash": "645648d3c3692758a55a7582b4ca0867", "title": "Configuring UNETs in Trainer Initialization"}, "287": {"path": "/dalle2_pytorch/trainer.py:482-510", "hash": "97f14a42df584d084dacbb4ee5f79347", "title": "Optimizer and EMA Initialization"}, "288": {"path": "/dalle2_pytorch/trainer.py:511-537", "hash": "db2628f5728d33efc745134cd37dd9ea", "title": "Precision Conversion and Decoder Preparation"}, "289": {"path": "/dalle2_pytorch/trainer.py:538-566", "hash": "35a0efd56728377704c7ec40a90408e6", "title": "Optimizers, Schedulers, and Warmup: UNET Validation"}, "290": {"path": "/dalle2_pytorch/trainer.py:567-591", "hash": "fce7ade71b467e042c000c763a962688", "title": "Save Model States"}, "291": {"path": "/dalle2_pytorch/trainer.py:593-622", "hash": "d207cbc10ac7bca67c9b6b19a0b8ba67", "title": "Load and Train Model State from Path"}, "292": {"path": "/dalle2_pytorch/trainer.py:623-652", "hash": "1d59400b62b9df273158dd4b3257f17e", "title": "Load and Update Saved State: Unet Trainer"}, "293": {"path": "/dalle2_pytorch/trainer.py:653-683", "hash": "3963108587f2de896ccb2b5e2f38b31f", "title": "Sampling Process for Model Optimization"}, "294": {"path": "/dalle2_pytorch/trainer.py:685-717", "hash": "5dc38089e1bac017bd4171c7f7cf1551", "title": "Embedding Text and Images with CLIP Unets"}, "295": {"path": "/dalle2_pytorch/trainer.py:719-742", "hash": "cc1af6f793c5c27cd248452e33976a52", "title": "Accumulating Losses in DALLE2 Trainer"}, "296": {"path": "/dalle2_pytorch/utils.py", "hash": "95140b638822671c3b5d5c5186abf740", "title": "Utility Functions for Time, Print, and Import"}, "297": {"path": "/dalle2_pytorch/version.py", "hash": "e09efce916437a8c21b4b4346b99cb18", "title": "DALLE2-PyTorch Version: 1.15.6"}, "298": {"path": "/dalle2_pytorch/vqgan_vae.py", "hash": "4acdc976f83d370e6d278d5801aa4b33", "title": "VQGAN-VAE Image Generation: Architectures and Algorithms"}, "299": {"path": "/dalle2_pytorch/vqgan_vae.py:1-51", "hash": "670331a102cae218c186bbef994d5f3d", "title": "Vector Quantize Module Setup"}, "300": {"path": "/dalle2_pytorch/vqgan_vae.py:53-87", "hash": "6c5ebe35fd94f611ec8f7351062fbcf3", "title": "Utility Functions and Tensor Operations"}, "301": {"path": "/dalle2_pytorch/vqgan_vae.py:88-121", "hash": "b3e59e855862071ae95cafa84dabcb46", "title": "Utility Functions for VQ-VAE-GAN Model"}, "302": {"path": "/dalle2_pytorch/vqgan_vae.py:123-163", "hash": "063f7ebdca3c01b89220a610ce0ee78b", "title": "Discriminator Design in VQGAN-VAE Architecture"}, "303": {"path": "/dalle2_pytorch/vqgan_vae.py:164-197", "hash": "e7548561dc45963e514d3e6aa58e644e", "title": "VQGAN-VAE Model: Convolutional and Group Normalization"}, "304": {"path": "/dalle2_pytorch/vqgan_vae.py:199-232", "hash": "292a6db3583a0bff246a975ba69ebd79", "title": "Resnet Encoder/Decoder VQ-VAE for Image Gen"}, "305": {"path": "/dalle2_pytorch/vqgan_vae.py:233-262", "hash": "08298a66657335becb9b6bfdd885e38f", "title": "VQGAN-VAE Class Definition"}, "306": {"path": "/dalle2_pytorch/vqgan_vae.py:264-279", "hash": "3b8c3060911b1a1820878ae1cf7c8d48", "title": "VQ-VAE Model Encoder and Decoder Blocks"}, "307": {"path": "/dalle2_pytorch/vqgan_vae.py:281-315", "hash": "d1c34ce204f2c999a00ce400dac47a22", "title": "VQGAN-VAE Model: Encoder, Decoder, GLUResBlock"}, "308": {"path": "/dalle2_pytorch/vqgan_vae.py:317-354", "hash": "8ca0833a47c28fdb2836b9d4997586e4", "title": "VQGAN-ResBlock and Attention Layer: Image Processing"}, "309": {"path": "/dalle2_pytorch/vqgan_vae.py:356-396", "hash": "a12ac5e5afc89e749f928a0f0ddecc49", "title": "Multi-Head Attention Layer in ViT"}, "310": {"path": "/dalle2_pytorch/vqgan_vae.py:397-433", "hash": "5c139253f535e8dafeb9fb1554a7d111", "title": "Multi-Head Attention for Transformers"}, "311": {"path": "/dalle2_pytorch/vqgan_vae.py:434-476", "hash": "4afc90ca55d3abd859d34f435be86891", "title": "Encoder-Decoder ViT Architecture"}, "312": {"path": "/dalle2_pytorch/vqgan_vae.py:477-510", "hash": "d38cb70f4df21a67efe4d76978a4edf1", "title": "VQ-VAE Model for Image Generation"}, "313": {"path": "/dalle2_pytorch/vqgan_vae.py:511-562", "hash": "2524be2435f5fbe7d76b96a256fcbfce", "title": "VQGAN-VAE: GAN Integrated Variant of VAE"}, "314": {"path": "/dalle2_pytorch/vqgan_vae.py:563-596", "hash": "da5a3d8b6b5bfa210ecd10797f2202f1", "title": "Initialize VQ-VAE Model with Specified Parameters"}, "315": {"path": "/dalle2_pytorch/vqgan_vae.py:597-633", "hash": "9570949668df67fc96cf128950fbd630", "title": "VQGAN-VAE Model with GAN and Losses"}, "316": {"path": "/dalle2_pytorch/vqgan_vae.py:634-672", "hash": "3ff2faa27e8fc4a2c66ed9c0821051df", "title": "VQGAN-VAE Encoding and Decoding"}, "317": {"path": "/dalle2_pytorch/vqgan_vae.py:674-700", "hash": "396338da134746cccaea787b3cb5f3e3", "title": "VQGAN-VAE: Image Encoding and Decoding with Losses"}, "318": {"path": "/dalle2_pytorch/vqgan_vae.py:702-739", "hash": "c69aa8284e42638e2519c3bfa6660fad", "title": "VQ-VAE: Reconstruction and Perceptual Loss"}, "319": {"path": "/dalle2_pytorch/vqgan_vae.py:740-764", "hash": "01dfff7f40c5a48eb18a778ed6619be7", "title": "Combined Loss Calculation"}, "320": {"path": "/dalle2_pytorch/vqgan_vae_trainer.py", "hash": "d7e12b719204d879f6c2e32949652c15", "title": "VAE Model Training with PyTorch"}, "321": {"path": "/dalle2_pytorch/vqgan_vae_trainer.py:1-47", "hash": "6973e00f8ffa10156fcd8a08a53eb46e", "title": "Utility Functions and Helper Methods"}, "322": {"path": "/dalle2_pytorch/vqgan_vae_trainer.py:48-91", "hash": "56664ff9eae92d28ffeb9b822258bab5", "title": "VQGAN-VAE Training Classes"}, "323": {"path": "/dalle2_pytorch/vqgan_vae_trainer.py:92-123", "hash": "637b496cae89c828878839a923acfafb", "title": "VQGAN VAE Training Setup"}, "324": {"path": "/dalle2_pytorch/vqgan_vae_trainer.py:124-150", "hash": "8be1cd0b601b1e86f3d253cef87b98da", "title": "Mixed Precision Pytorch Dataset Initializer"}, "325": {"path": "/dalle2_pytorch/vqgan_vae_trainer.py:151-188", "hash": "0ac392156d3871184acb453a0c9964a2", "title": "VAE Trainer: Initializing Data Loader and Parameters"}, "326": {"path": "/dalle2_pytorch/vqgan_vae_trainer.py:189-221", "hash": "d706166c53b0d319cb8bb0e5f45d9aa0", "title": "Efficient VAE Training with Discriminator Update"}, "327": {"path": "/dalle2_pytorch/vqgan_vae_trainer.py:223-251", "hash": "dd0c6cb60499e7d4ea406335889fe64b", "title": "VAE Discriminator Loss Tracking and Saving"}, "328": {"path": "/dalle2_pytorch/vqgan_vae_trainer.py:253-278", "hash": "91fccda162950fcdc500911c362a62a7", "title": "Periodic VAE Model Saving"}, "329": {"path": "/prior.md", "hash": "8e03a137f2ee3ca345bfb6f17a93b42f", "title": "CLIP and Diffusion Prior Image Generation"}, "330": {"path": "/prior.md:1-21", "hash": "8952ff4958a64251d75117acda9d7f7d", "title": "Diffusion Prior for Cross-Space Image Generation"}, "331": {"path": "/prior.md:22-47", "hash": "b7698276e60e0dc5b4b80bd9ed2cd50e", "title": "Generate Image from Text with Deep Learning Models"}, "332": {"path": "/prior.md:48-76", "hash": "0fe6d9cbf519e961999deafeb516c5e7", "title": "Load Pre-trained Prior Model for Enhanced CLIP Embeddings"}, "333": {"path": "/prior.md:77-119", "hash": "ec53675fd8dc78a2dfdc08064d15dbea", "title": "Instantiating Pre-Trained Model and Tokenization"}, "334": {"path": "/prior.md:120-130", "hash": "26c334eff78c125d930c45e4535e95ff", "title": "Efficient Embedding Prediction in CLIP Priors"}, "335": {"path": "/prior.md:132-146", "hash": "4779c3eeea2b656f6b7d3ba2f7700eb0", "title": "Preparing Embeddings for Training Efficiency"}, "336": {"path": "/prior.md:146-155", "hash": "a21f01c918bb9c6ef4677bbfe25054a2", "title": "Distributed Training with Accelerate and Metrics"}, "337": {"path": "/prior.md:155-157", "hash": "0c906873be86e5030803895a43d7bd87", "title": "Validation Loss Calculation"}, "338": {"path": "/prior.md:157-158", "hash": "8419104ba1dcaa6c98ae3d352f160046", "title": "EMA vs Online Model: Validation Loss Comparison"}, "339": {"path": "/prior.md:158-160", "hash": "588d937184db7fb3f0d75264cb41606c", "title": "Baseline Similarity in DALLE2-PyTorch"}, "340": {"path": "/prior.md:160-161", "hash": "bb30e0262b418620efe5b43ca89bab09", "title": "Training Efficiency and Overfitting Metrics"}, "341": {"path": "/prior.md:161-163", "hash": "b7eb2d2c59fef0660fd7d442b5521de0", "title": "Monitoring Cosine Similarity for Overfitting Prevention"}, "342": {"path": "/prior.md:163-175", "hash": "5fe3cac849f4bda403a5420f33416df6", "title": "Training Diffusion Model: Launch and Save Checkpoints"}, "343": {"path": "/prior.md:175-183", "hash": "3110ab94a447131a5fc167750dd3ed7e", "title": "Latest.pth: Avoiding Save_every Overlaps"}, "344": {"path": "/setup.py", "hash": "c69ac16052b8572465599df1f8263867", "title": "Dalle2-PyTorch Setup Script"}, "345": {"path": "/setup.py:1-42", "hash": "d1bcad29b567779b6b4a3deca21053fb", "title": "Dalle2-PyTorch Setup Script"}, "346": {"path": "/setup.py:43-59", "hash": "31e7d416da2828086503ba9798bf2325", "title": "Python AI Project Setup File"}, "347": {"path": "/train_decoder.py", "hash": "33e2e2d413ec4ee16ab53471c628e53d", "title": "DALL-E 2 UNet Model Training Script"}, "348": {"path": "/train_decoder.py:1-28", "hash": "43234efab24b489c38a363ad28942229", "title": "Train Decoder Model in DALLE2-pytorch Framework"}, "349": {"path": "/train_decoder.py:30-64", "hash": "1252d55e3dd9c99cd112266cfe56ddc2", "title": "Splitting Datasets for Training, Validation & Testing"}, "350": {"path": "/train_decoder.py:64-80", "hash": "7e7fc46077a98dfd0540485115da94d5", "title": "Random Shard Dataset Splitter"}, "351": {"path": "/train_decoder.py:81-103", "hash": "ecdf4afdfe2fdc55d0030fda4b481d44", "title": "Multi-Dataset Dataloaders"}, "352": {"path": "/train_decoder.py:104-130", "hash": "ca30b495cc6ab02167211417342809c2", "title": "Zipped List Dataset Extractor"}, "353": {"path": "/train_decoder.py:131-152", "hash": "d18dc6c548cad7f43b989517c60ddcc6", "title": "Generate Sample Images and Captions"}, "354": {"path": "/train_decoder.py:153-172", "hash": "88aaf262a36f30607afbb15a4854331b", "title": "Preparing Training Samples with Image-Text Embeddings"}, "355": {"path": "/train_decoder.py:173-186", "hash": "f4459701759adf97992a88ab2e3bcc01", "title": "Grid Image Samples Generator"}, "356": {"path": "/train_decoder.py:187-203", "hash": "98d590f624b2f85d507fea1fcb7e4e93", "title": "Decoder Evaluation Metrics"}, "357": {"path": "/train_decoder.py:204-227", "hash": "2e8fafc4654128f22aa7edf2c25e8390", "title": "Metrics Calculation and Storage"}, "358": {"path": "/train_decoder.py:228-247", "hash": "6615065f8b119aa80af34c6aaeaa0692", "title": "Metrics Calculation and Normalization for Model Performance"}, "359": {"path": "/train_decoder.py:248-264", "hash": "480685590cbb9f0c21f80934a9239f0f", "title": "Trainer Functions: Train, Save, Recall"}, "360": {"path": "/train_decoder.py:266-294", "hash": "8932f89c10779b6fff84788699159ab1", "title": "Train Decoder Function"}, "361": {"path": "/train_decoder.py:295-322", "hash": "e6ff23d5a7d74de28f00060ee9158a80", "title": "Training Decoder Module"}, "362": {"path": "/train_decoder.py:323-337", "hash": "a5ffb93acb60d2b955425aa8628c983c", "title": "Model Loading and Training Progress"}, "363": {"path": "/train_decoder.py:339-357", "hash": "42e2af0beba8f3c8da2038d37a8320c3", "title": "Epoch Sample Counting in Train Decoder"}, "364": {"path": "/train_decoder.py:358-380", "hash": "955447eb5cfa47b7fe2b061567214b14", "title": "Train Decoder Model with Image and Text Embeddings"}, "365": {"path": "/train_decoder.py:381-394", "hash": "538dc82dcb50037ee2a62d6c8dde88f9", "title": "Training DALL-E 2 Decoder with CLIP Embeddings"}, "366": {"path": "/train_decoder.py:396-413", "hash": "9218ee9a15a4f4367c623768d100204d", "title": "Averaging Losses: Unet Decoder Training"}, "367": {"path": "/train_decoder.py:414-431", "hash": "efab0f33ef5332476c98b3b0701aa617", "title": "Model Snapshotting and Logging"}, "368": {"path": "/train_decoder.py:431-448", "hash": "a31758319ed5ee4ca06e8957355e3cbf", "title": "Training and Validation Code Generation"}, "369": {"path": "/train_decoder.py:449-467", "hash": "a1cbccf9c46fa7101f4c6d7ef5296663", "title": "Prepare Data for Evaluation"}, "370": {"path": "/train_decoder.py:469-484", "hash": "a14a44060d725cbb126e3171d020bba0", "title": "Auto-generating Image Embeddings in Train Decoder"}, "371": {"path": "/train_decoder.py:485-500", "hash": "984ba4a31bec19e06b8ce1a15b9d689a", "title": "Validation Loss Calculator"}, "372": {"path": "/train_decoder.py:501-515", "hash": "c5b31d4f40810c137e8fb053055b4764", "title": "Averaging and Logging Validation Losses"}, "373": {"path": "/train_decoder.py:516-528", "hash": "540cd333822ec330f8d92953bc5aa4e7", "title": "Train Decoder: Sample Generation and Model Saving"}, "374": {"path": "/train_decoder.py:530-546", "hash": "33211ac6c31c68d0de80eaacb743df83", "title": "Saving Trainer with New Minimum Loss"}, "375": {"path": "/train_decoder.py:547-563", "hash": "1f04b2470679e5574fcb453cc4451ad3", "title": "DALLE2 Distributed Training Initialization"}, "376": {"path": "/train_decoder.py:564-581", "hash": "a78f8ffd4f3067c384754d141f7dfac1", "title": "Distributed Training Utilities"}, "377": {"path": "/train_decoder.py:582-603", "hash": "7e676a14242f5b157360555e02813229", "title": "Initialize Decoder Model and Tracker"}, "378": {"path": "/train_decoder.py:605-627", "hash": "50283b0c29e4b7d6f0043d3372664f05", "title": "CLIP Embedding Checker"}, "379": {"path": "/train_decoder.py:628-647", "hash": "aef4adf148b1182b960fee02127e96db", "title": "Train Decoder: Click CLI with Config Options"}, "380": {"path": "/train_decoder.py:648-651", "hash": "51517485b5141b7ac66ad38a484ebc1c", "title": "Init and Call Main"}, "381": {"path": "/train_diffusion_prior.py", "hash": "178ccad09ec06ae0a633ac1cba1fa67a", "title": "Train Diffusion Prior with PyTorch"}, "382": {"path": "/train_diffusion_prior.py:1-45", "hash": "6aac46dcd8e83507c2bd682046e32320", "title": "Training Diffusion Prior Model with PyTorch"}, "383": {"path": "/train_diffusion_prior.py:46-83", "hash": "a1d09ffdd5eac341d775a415fd7725df", "title": "Create Trainer and Tracker for Diffusion Prior"}, "384": {"path": "/train_diffusion_prior.py:84-122", "hash": "8c63d9309eac0eab1091c633a66c6a91", "title": "Process-Aware Aggregation Function"}, "385": {"path": "/train_diffusion_prior.py:124-160", "hash": "f6f747dfc8948868b6219f89902a675d", "title": "Tensor Data Processing and Model Logging"}, "386": {"path": "/train_diffusion_prior.py:162-201", "hash": "dc40af0fe2f73c77fd20bc0badcf04c9", "title": "Model Training Tracker and Evaluation"}, "387": {"path": "/train_diffusion_prior.py:202-239", "hash": "c1cfc4acbd4ce453df199fdfe9294e6b", "title": "Validation Loss Calculator"}, "388": {"path": "/train_diffusion_prior.py:241-275", "hash": "5c684c24aa96b5971a8794b10575dc68", "title": "Cosine Similarity Measurement in Diffusion Model"}, "389": {"path": "/train_diffusion_prior.py:276-303", "hash": "035e81bd8e90dd54674edfe904a4ea11", "title": "Shuffled Embeddings for Diffusion Training"}, "390": {"path": "/train_diffusion_prior.py:304-334", "hash": "bedc5c60db0e47b69f45e5b5eca7f54f", "title": "Text-Image Similarity with Diffusion Models"}, "391": {"path": "/train_diffusion_prior.py:335-360", "hash": "69c3d6e426e492d7e5810b92e3b718fd", "title": "Embedding Similarity Tracker in Diffusion Model"}, "392": {"path": "/train_diffusion_prior.py:361-398", "hash": "0a86a09c27323dbc095452146d85f543", "title": "Evaluate Diffusion Prior Model"}, "393": {"path": "/train_diffusion_prior.py:399-440", "hash": "4341f5029cac7d64c68028fb5693f526", "title": "Cosine Similarity Measurement and Training Script"}, "394": {"path": "/train_diffusion_prior.py:441-471", "hash": "e12111797b7e6921b341a6d9f4ea36a8", "title": "Epoch-wise Dataset Reset and Tracking"}, "395": {"path": "/train_diffusion_prior.py:473-504", "hash": "b45ed692f0efe0abdc39f6853006be20", "title": "Backpropagation and EMA Updating"}, "396": {"path": "/train_diffusion_prior.py:505-536", "hash": "ac74416ca4dd630d1b205c1f2ef3666e", "title": "Evaluating Model on Validation Data"}, "397": {"path": "/train_diffusion_prior.py:537-566", "hash": "753750011fd75fe4073a3cf87a09dad9", "title": "Best Model Validation and Time Logging"}, "398": {"path": "/train_diffusion_prior.py:567-598", "hash": "702d36b3ba290951b729bcc4a967bacf", "title": "Reset Validation Timer and Handle Errors"}, "399": {"path": "/train_diffusion_prior.py:599-640", "hash": "d8af0180076d924e6be7cae013a76117", "title": "Saving Best Model with Lower Test Loss"}, "400": {"path": "/train_diffusion_prior.py:641-681", "hash": "db864a7b1594235aa33c5c541aa615a3", "title": "Trainer Initialization and Distribution"}, "401": {"path": "/train_diffusion_prior.py:682-711", "hash": "6e805279f0f5176a87b891c46d05f8e1", "title": "Epoch Tracker Code Snippet"}, "402": {"path": "/train_diffusion_prior.py:712-743", "hash": "1506ec0cde71b0854e8218fcf207de35", "title": "Resume Training Data Loader"}, "403": {"path": "/train_diffusion_prior.py:744-770", "hash": "ba290ece0691b04d76bab92866a3a8d9", "title": "Initiating Heterogeneous Fusion Training"}}}